# -*- Mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# vim:ft=zsh:sw=4:sts=4:et
#
# Stores the given value into the atomic-string.
# Basically, if flag == 0, then there's room and a value can be stored.
# If flag == 1, then a value is ready for retrieval. Whichever party
# will make use of the flag, either storing or getting the value, its
# gonna succeed (if the 1-element queue will be full empty, as expected).

setopt localoptions extendedglob typesetsilent warncreateglobal

local -A opthash
typeset -g REPLY=""
# The variable/data household, an operational-"database" hash
typeset -gA ZREDIS_CMD

zparseopts -E -D -A opthash h -help v -verbose q -quiet a -no-ansi n || \
          { print -r -- "Improper options given, see help (-h/--help)"; return 1; }

(( ${+opthash[-h]} + ${+opthash[--help]} ))     && local OPT_HELP="-h"
(( ${+opthash[-v]} + ${+opthash[--verbose]} ))  && local OPT_VERBOSE="-v"
(( ${+opthash[-q]} + ${+opthash[--quiet]} ))    && local OPT_QUIET="-q"
(( ${+opthash[-a]} + ${+opthash[--no-ansi]} ))  && local OPT_NO_ANSI="-a"

local name="$1" val="$2" key1 value1_var_name key2 flag2_var_name
[[ -z "$name" ]] && { print -r -- "Name of the atom-string parameter needed as first argument, see -h/--help"; return 1; }

# Clear cache of the value-holder
key1="queue_${name}_sink"
value1_var_name="${ZREDIS_CMD[$key1]}"
ztclear "$value1_var_name"

# Clear cache of the accompanying flag-holder
key2="queue_${name}_flag_idx"
flag2_var_name="${ZREDIS_CMD[$key2]}"
ztclear "$flag2_var_name"

# Prepare the local copy of the flag-holder
# Unused, 0 and 1 are being used directly, to
# allow dynamic change of direction of the
# 1-element queue.
# Just read the value, there's no indirection
# value3="${ZREDIS_CMD[queue_${name}_val_flag_idx]}"

# value1 - the value, flag2 - flag
if [[ "${(P)flag2_var_name:-0}" = "0" ]]; then
    : ${(P)value1_var_name::=$val}
    : ${(P)flag2_var_name::=1}
    [[ -z "$OPT_QUIET" ]] && print -r -- "Successfully stored new data into the 1-element queue \`$name'" return 0
else
    [[ -z "$OPT_QUIET" ]] && print -r -- "The 1-element queue \`$name' is full, didn't push new data"
    return 1
fi
